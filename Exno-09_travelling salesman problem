import itertools
print(("lokesh 192211069"))

# Distance matrix
# Example: 4 cities (0 to 3)
distances = [
    [0, 10, 15, 20],
    [10, 0, 35, 25],
    [15, 35, 0, 30],
    [20, 25, 30, 0]
]

def tsp_brute_force(distances):
    n = len(distances)
    cities = list(range(n))
    min_cost = float('inf')
    best_path = []

    for perm in itertools.permutations(cities[1:]):
        path = [0] + list(perm) + [0]  # Start and end at city 0
        cost = sum(distances[path[i]][path[i+1]] for i in range(n))
        if cost < min_cost:
            min_cost = cost
            best_path = path

    return best_path, min_cost

# Run the TSP
path, cost = tsp_brute_force(distances)
print("Best path:", path)
print("Minimum cost:", cost)
