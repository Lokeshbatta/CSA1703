# Minimax with Alpha-Beta Pruning
print("lokesh 192211069")

# Minimax function with pruning
def minimax(depth, node_index, is_max, scores, alpha, beta):
    # Terminal node (leaf)
    if depth == 3:
        return scores[node_index]

    if is_max:
        best = float('-inf')
        for i in range(2):
            val = minimax(depth + 1, node_index * 2 + i, False, scores, alpha, beta)
            best = max(best, val)
            alpha = max(alpha, best)
            if beta <= alpha:
                break  # Beta cut-off
        return best
    else:
        best = float('inf')
        for i in range(2):
            val = minimax(depth + 1, node_index * 2 + i, True, scores, alpha, beta)
            best = min(best, val)
            beta = min(beta, best)
            if beta <= alpha:
                break  # Alpha cut-off
        return best

# Example game tree (leaf node scores)
scores = [3, 5, 6, 9, 1, 2, 0, -1]  # Depth 3 tree (8 leaf nodes)

# Initial values of alpha and beta
alpha = float('-inf')
beta = float('inf')

# Start the minimax algorithm
optimal_value = minimax(0, 0, True, scores, alpha, beta)

print("The optimal value is:", optimal_value)
